{"ast":null,"code":"var _jsxFileName = \"/Users/dostonbekubaydullayev/Desktop/TodoAppReactjs/src/Time.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst setZero = n => n < 10 ? \"0\" + n : n;\n\nconst Time = () => {\n  _s();\n\n  const [time, setTime] = useState(new Date());\n  const hour = setZero(time.getHours());\n  const minute = setZero(time.getMinutes());\n  const seconds = setZero(time.getSeconds());\n  useEffect(() => {\n    setTimeout(() => {\n      setTime(new Date());\n    }, 1000);\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [hour, \":\", minute, \":\", seconds]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Time, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n\n_c = Time;\nexport default Time;\n\nvar _c;\n\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"sources":["/Users/dostonbekubaydullayev/Desktop/TodoAppReactjs/src/Time.js"],"names":["useEffect","useState","setZero","n","Time","time","setTime","Date","hour","getHours","minute","getMinutes","seconds","getSeconds","setTimeout"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,OAAO,GAAGC,CAAC,IAAIA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAAxC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAIM,IAAJ,EAAD,CAAhC;AAEA,QAAMC,IAAI,GAAEN,OAAO,CAACG,IAAI,CAACI,QAAL,EAAD,CAAnB;AACA,QAAMC,MAAM,GAAER,OAAO,CAACG,IAAI,CAACM,UAAL,EAAD,CAArB;AACA,QAAMC,OAAO,GAAEV,OAAO,CAACG,IAAI,CAACQ,UAAL,EAAD,CAAtB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,UAAU,CAAC,MAAM;AAACR,MAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AAAoB,KAA5B,EAA8B,IAA9B,CAAV;AACH,GAFQ,EAEN,CAACF,IAAD,CAFM,CAAT;AAIA,sBAAO;AAAA,eAAKG,IAAL,OAAYE,MAAZ,OAAqBE,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAZD;;GAAMR,I;;KAAAA,I;AAcN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\"\n\nconst setZero = n => n < 10 ? \"0\" + n : n;\n\nconst Time = () => {\n    const [time, setTime] = useState(new Date());\n\n    const hour =setZero(time.getHours());\n    const minute =setZero(time.getMinutes());\n    const seconds =setZero(time.getSeconds());\n\n    useEffect(() => {\n        setTimeout(() => {setTime(new Date())}, 1000)\n    }, [time])\n\n    return <h1>{hour}:{minute}:{seconds}</h1>\n}\n\nexport default Time"]},"metadata":{},"sourceType":"module"}