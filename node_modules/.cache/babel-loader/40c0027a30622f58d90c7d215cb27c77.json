{"ast":null,"code":"var _jsxFileName = \"/Users/dostonbekubaydullayev/Desktop/TodoAppReactjs/src/containers/Body/Body.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BodyWrapper from \"./BodyWrapper\";\nimport { SET_VALUE } from \"../Todo/types\";\nimport { ListGroup } from \"reactstrap\";\nimport Item from \"../Todo/Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = props => {\n  var _data;\n\n  // const dispatch = useDispatch();\n  // const data = useSelector((state) => state.value);\n  // const value = useSelector((state) => state.tasks);\n  // const typing = (event) => {\n  //   const action = { type: SET_VALUE, payload: event.target.value };\n  //   dispatch(action);\n  // };\n  // const add = () => {\n  //   const action = { type: SET_VALUE, payload: value };\n  //   dispatch(action);\n  // };\n  // const deleteTask = (index) => {\n  //   const action = { type: \"DELETE_TASK\", payload: index };\n  //   dispatch(action);\n  // };\n  // const editTask = (value, index) => {\n  //   const action = { type: \"EDIT_TASK\", payload: { value, index } };\n  //   dispatch(action);\n  // };\n  // const toggleCompleted = (index) => {\n  //   console.log(index, \"toggleCompleted\");\n  //   const action = { type: \"TOGGLE_COMPLETED\", payload: index };\n  //   dispatch(action);\n  // };\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    children: /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: (_data = data) === null || _data === void 0 ? void 0 : _data.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(Item, {\n          children: [\"value=\", value, \"index=\", index, \"deleteTask=\", deleteTask, \"editTask=\", editTask, \"toggleCompleted=\", toggleCompleted]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/dostonbekubaydullayev/Desktop/TodoAppReactjs/src/containers/Body/Body.js"],"names":["React","useDispatch","useSelector","BodyWrapper","SET_VALUE","ListGroup","Item","Body","props","data","map","value","index","deleteTask","editTask","toggleCompleted"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,SAAD;AAAA,yBACGC,IADH,0CACG,MAAMC,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,4BACE,QAAC,IAAD;AAAA,+BACSD,KADT,YAESC,KAFT,iBAGcC,UAHd,eAIYC,QAJZ,sBAKmBC,eALnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlDD;;KAAMR,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BodyWrapper from \"./BodyWrapper\";\nimport { SET_VALUE } from \"../Todo/types\";\nimport { ListGroup } from \"reactstrap\";\nimport Item from \"../Todo/Item\";\n\nconst Body = (props) => {\n  // const dispatch = useDispatch();\n\n  // const data = useSelector((state) => state.value);\n  // const value = useSelector((state) => state.tasks);\n\n  // const typing = (event) => {\n  //   const action = { type: SET_VALUE, payload: event.target.value };\n  //   dispatch(action);\n  // };\n\n  // const add = () => {\n  //   const action = { type: SET_VALUE, payload: value };\n  //   dispatch(action);\n  // };\n\n  // const deleteTask = (index) => {\n  //   const action = { type: \"DELETE_TASK\", payload: index };\n  //   dispatch(action);\n  // };\n\n  // const editTask = (value, index) => {\n  //   const action = { type: \"EDIT_TASK\", payload: { value, index } };\n  //   dispatch(action);\n  // };\n\n  // const toggleCompleted = (index) => {\n  //   console.log(index, \"toggleCompleted\");\n\n  //   const action = { type: \"TOGGLE_COMPLETED\", payload: index };\n  //   dispatch(action);\n  // };\n\n  return (\n    <BodyWrapper>\n      <ListGroup>\n        {data?.map((value, index) => {\n          return (\n            <Item>\n              value={value}\n              index={index}\n              deleteTask={deleteTask}\n              editTask={editTask}\n              toggleCompleted={toggleCompleted}\n            </Item>\n          );\n        })}\n      </ListGroup>\n    </BodyWrapper>\n  );\n};\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}