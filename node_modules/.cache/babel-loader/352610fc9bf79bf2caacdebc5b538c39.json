{"ast":null,"code":"var _jsxFileName = \"/Users/dostonbekubaydullayev/Desktop/TodoAppReactjs/src/containers/Body/Body.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BodyWrapper from \"./BodyWrapper\";\nimport { SET_VALUE } from \"../Todo/types\";\nimport { ListGroup } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.value);\n  const value = useSelector(state => state.tasks);\n\n  const typing = event => {\n    const action = {\n      type: SET_VALUE,\n      payload: event.target.value\n    };\n    dispatch(action);\n  };\n\n  const add = () => {\n    const action = {\n      type: SET_VALUE,\n      payload: value\n    };\n    dispatch(action);\n  };\n\n  const deleteTask = index => {\n    const action = {\n      type: \"DELETE_TASK\",\n      payload: index\n    };\n    dispatch(action);\n  };\n\n  const editTask = (value, index) => {\n    const action = {\n      type: \"EDIT_TASK\",\n      payload: {\n        value,\n        index\n      }\n    };\n    dispatch(action);\n  };\n\n  const toggleCompleted = index => {\n    console.log(index, \"toggleCompleted\");\n    const action = {\n      type: \"TOGGLE_COMPLETED\",\n      payload: index\n    };\n    dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    children: /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: data === null || data === void 0 ? void 0 : data.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(Item, {\n          value: value,\n          index: index,\n          deleteTask: deleteTask,\n          editTask: editTask,\n          toggleCompleted: toggleCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Body, \"e8u43WupcRcyG9080NdedC4yGTE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/dostonbekubaydullayev/Desktop/TodoAppReactjs/src/containers/Body/Body.js"],"names":["React","useDispatch","useSelector","BodyWrapper","SET_VALUE","ListGroup","Body","props","dispatch","data","state","value","tasks","typing","event","action","type","payload","target","add","deleteTask","index","editTask","toggleCompleted","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,IAAI,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAxB;AACA,QAAMA,KAAK,GAAGT,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACE,KAAlB,CAAzB;;AAEA,QAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,UAAMC,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAEZ,SAAR;AAAmBa,MAAAA,OAAO,EAAEH,KAAK,CAACI,MAAN,CAAaP;AAAzC,KAAf;AACAH,IAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,GAAG,GAAG,MAAM;AAChB,UAAMJ,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAEZ,SAAR;AAAmBa,MAAAA,OAAO,EAAEN;AAA5B,KAAf;AACAH,IAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,GAHD;;AAKA,QAAMK,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAMN,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEI;AAAhC,KAAf;AACAb,IAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,GAHD;;AAKA,QAAMO,QAAQ,GAAG,CAACX,KAAD,EAAQU,KAAR,KAAkB;AACjC,UAAMN,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAE;AAAEN,QAAAA,KAAF;AAASU,QAAAA;AAAT;AAA9B,KAAf;AACAb,IAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,GAHD;;AAKA,QAAMQ,eAAe,GAAIF,KAAD,IAAW;AACjCG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmB,iBAAnB;AAEA,UAAMN,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEI;AAArC,KAAf;AACAb,IAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,GALD;;AAOA,sBAAO,QAAC,WAAD;AAAA,2BACL,QAAC,SAAD;AAAA,gBACGN,IADH,aACGA,IADH,uBACGA,IAAI,CAAEiB,GAAN,CAAU,CAACf,KAAD,EAAQU,KAAR,KAAiB;AAC1B,4BAAO,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,KAAb;AACP,UAAA,KAAK,EAAEU,KADA;AAEP,UAAA,UAAU,EAAED,UAFL;AAGP,UAAA,QAAQ,EAAEE,QAHH;AAIP,UAAA,eAAe,EAAEC;AAJV;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAWD,CA5CD;;GAAMjB,I;UACaL,W,EAEJC,W,EACCA,W;;;KAJVI,I;AA8CN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BodyWrapper from \"./BodyWrapper\";\nimport { SET_VALUE } from \"../Todo/types\";\nimport { ListGroup } from \"reactstrap\";\n\nconst Body = (props) => {\n  const dispatch = useDispatch();\n\n  const data = useSelector((state) => state.value);\n  const value = useSelector((state) => state.tasks);\n\n  const typing = (event) => {\n    const action = { type: SET_VALUE, payload: event.target.value };\n    dispatch(action);\n  };\n\n  const add = () => {\n    const action = { type: SET_VALUE, payload: value };\n    dispatch(action);\n  };\n\n  const deleteTask = (index) => {\n    const action = { type: \"DELETE_TASK\", payload: index };\n    dispatch(action);\n  };\n\n  const editTask = (value, index) => {\n    const action = { type: \"EDIT_TASK\", payload: { value, index } };\n    dispatch(action);\n  };\n\n  const toggleCompleted = (index) => {\n    console.log(index, \"toggleCompleted\");\n\n    const action = { type: \"TOGGLE_COMPLETED\", payload: index };\n    dispatch(action);\n  };\n\n  return <BodyWrapper>\n    <ListGroup>\n      {data?.map((value, index) =>{\n        return <Item value={value}\n        index={index}\n        deleteTask={deleteTask}\n        editTask={editTask}\n        toggleCompleted={toggleCompleted} />\n      })}\n    </ListGroup>\n  </BodyWrapper>;\n};\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}